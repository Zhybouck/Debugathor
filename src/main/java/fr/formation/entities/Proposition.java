package fr.formation.entities;
// Generated 5 avr. 2019 11:02:06 by Hibernate Tools 5.1.10.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Proposition generated by hbm2java
 */
@Entity
@Table(name = "proposition", catalog = "debugathor")
public class Proposition implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private int idProposition;
	private Solution solution;
	private Utilisateur utilisateur;
	private String prop;
	private Date dateProp;

	public Proposition() {
	}

	public Proposition(int idProposition, Solution solution, Utilisateur utilisateur, String prop) {
		this.idProposition = idProposition;
		this.solution = solution;
		this.utilisateur = utilisateur;
		this.prop = prop;
	}

	public Proposition(int idProposition, Solution solution, Utilisateur utilisateur, String prop, Date dateProp) {
		this.idProposition = idProposition;
		this.solution = solution;
		this.utilisateur = utilisateur;
		this.prop = prop;
		this.dateProp = dateProp;
	}

	@Id

	@Column(name = "idProposition", unique = true, nullable = false)
	public int getIdProposition() {
		return this.idProposition;
	}

	public void setIdProposition(int idProposition) {
		this.idProposition = idProposition;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Solution_idSolution", nullable = false)
	public Solution getSolution() {
		return this.solution;
	}

	public void setSolution(Solution solution) {
		this.solution = solution;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Utilisateur_IdUtilisateur", nullable = false)
	public Utilisateur getUtilisateur() {
		return this.utilisateur;
	}

	public void setUtilisateur(Utilisateur utilisateur) {
		this.utilisateur = utilisateur;
	}

	@Column(name = "Prop", nullable = false)
	public String getProp() {
		return this.prop;
	}

	public void setProp(String prop) {
		this.prop = prop;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DateProp", length = 10)
	public Date getDateProp() {
		return this.dateProp;
	}

	public void setDateProp(Date dateProp) {
		this.dateProp = dateProp;
	}

	@Override
	public String toString() {
		return "Proposition [idProposition=" + idProposition + ", solution=" + solution + ", utilisateur=" + utilisateur
				+ ", prop=" + prop + ", dateProp=" + dateProp + "]";
	}
	
	

}
